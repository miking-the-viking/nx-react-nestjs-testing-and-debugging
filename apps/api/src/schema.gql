# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Auth {
  """JWT Bearer token"""
  token: String!
  user: User!
}

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  signup(data: SignupInput!): Auth!
  login(data: LoginInput!): Auth!
}

"""Office Location"""
enum Office {
  FC
  KW
  HAM
}

type Query {
  me: User!
  TeamMemberById(id: String!, office: Office!): TeamMember!
}

"""User role"""
enum Role {
  ADMIN
  USER
}

input SignupInput {
  email: String!
  password: String!
}

"""
A Team member belongs to an office and only one office. They are implemented
uniquely to each office but must satisfy the TeamMember object type when resolved.
"""
type TeamMember {
  """All Team Members must have a unique office id"""
  id: String!

  """The office the team member belongs to"""
  office: Office!

  """Full Name of the Team Member"""
  name: String!

  """Indicates whether they play ping pong or not"""
  playsPingpong: Boolean

  """Their favourite color"""
  favouriteColour: String
}

type User {
  id: String!
  created_at: String!
  updated_at: String!
  email: String!
  password: String!
  role: Role!
}
